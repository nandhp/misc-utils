#!/usr/bin/perl
#
# auto-xrandr - Automatically configure xrandr
#

my $INTERNAL = 'eDP1';
my $EXTERNAL = 'DP1';

my $current = `xrandr`;

# Load configuration of internal display
$current =~ m/^$INTERNAL (connected (\d+)x(\d+)\+(\d+)\+(\d+)|\S+)/m or
    die "xrandr parse error $INTERNAL";
my ($iw, $ih) = ($2, $3);
if ( !defined($iw) ) {
    $iw = $ih = 0;
    warn "Internal display is off";
}
else {
    warn "Internal display not at +0+0" if $4 ne 0 or $5 ne 0;
}

# Determine state of external display
$current =~ m/^$EXTERNAL (connected (\d+)x(\d+)\+(\d+)\+(\d+)|\S+)(?:.*\s*(?:^ +.*\s*)*^ +(\d+x\d+).*\+)?/m or
    die "xrandr parse error: $EXTERNAL";
my $epresent = $1 ne 'disconnected';

# Alternate between mirror and extend
my $emirror = (defined($2) and ($4 ne '0' or $5 ne '0'));
my $emode = $6;

# Formulate an xrandr command
my @cmd = ('xrandr', '--output', $EXTERNAL, $epresent ? (
               ($emode ? ('--mode', $emode) : '--auto'),
               '--pos', ($emirror ? 0 : $iw) . 'x0'
           ) : (
               '--off', '--output', $INTERNAL, '--auto'
           ));
print join(' ', @cmd), "\n";
system @cmd;

# Display status notification
my $notifytitle = "External display";
my $notifytext = $epresent ? ($emirror ? "Mirroring" : "Extending") .
    ($emode ? " ($emode)" : " (automatic resolution)") : "Not connected";
@cmd = ('notify-send', '-i', 'video-display', '-c', 'device',
        $notifytitle, $notifytext);
# @cmd = ('dbus-send', '--type=method_call', '--print-reply',
#         '--dest=org.freedesktop.Notifications',
#         '/org/freedesktop/Notifications',
#         'org.freedesktop.Notifications.Notify',
#         'string:RandR',         # Application
#         'uint32:1',             # ID of notification to replace
#         'string:video-display', # Icon
#         'string:' . "External display",       # Notification title
#         'string:' . $notifytext,              # Notification body
#         'array:string:',                      # Actions
#         'dict:string:string:category,device', # Hints
#         'int32:-1',                           # Timeout (milliseconds)
#     );
system @cmd;
# susssasa{ss}i
